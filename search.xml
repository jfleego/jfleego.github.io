<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[代码覆盖率工具: gcov+lcov]]></title>
      <url>%2F2016%2F12%2F20%2F%E4%BB%A3%E7%A0%81%E8%A6%86%E7%9B%96%E7%8E%87%E5%B7%A5%E5%85%B7-gcov-lcov%2F</url>
      <content type="text"><![CDATA[&#x6982;&#x8FF0;gcov&#x662F;gcc&#x5DE5;&#x5177;&#x94FE;&#x5185;&#x542B;&#x7684;&#x4E00;&#x4E2A;&#x9009;&#x9879;&#xFF0C;&#x7528;&#x4E8E;&#x6D4B;&#x8BD5;Code Coverage&#xFF0C;&#x5305;&#x542B;&#x4EE3;&#x7801;&#x884C;&#xFF0C;&#x51FD;&#x6570;&#x53CA;&#x5206;&#x652F;&#x7684;&#x8986;&#x76D6;&#x7387;&#x6D4B;&#x8BD5;&#x3002;lcov&#x662F;LTP&#x5BF9;gcov&#x6269;&#x5C55;&#x7684;&#x53EF;&#x89C6;&#x5316;&#x5DE5;&#x5177;&#xFF0C;debian&#x7CFB;&#x53EF;&#x76F4;&#x63A5;&#x901A;&#x8FC7;apt-get&#x5B89;&#x88C5;&#xFF0C;&#x7528;&#x4E8E;&#x751F;&#x6210;html&#x683C;&#x5F0F;&#x7684;&#x8BE6;&#x7EC6;&#x62A5;&#x544A;&#x3002;&#x672C;&#x6587;&#x4EC5;&#x5BF9;gcov+lcov&#x7684;&#x4F7F;&#x7528;&#x53CA;&#x5E38;&#x7528;&#x6280;&#x5DE7;&#x4F5C;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x4ECB;&#x7ECD;&#x3002; &#x4F7F;&#x7528;&#x6B65;&#x9AA4;&#x7F16;&#x8BD1;&#x76EE;&#x6807;&#x4EE3;&#x7801;&#x6D4B;&#x8BD5;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#x4EE3;&#x7801;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x52A0;&#x4E0A;&#x4E24;&#x4E2A;&#x9009;&#x9879;-fprofile-arcs&#x548C;-ftest-coverage&#xFF0C;&#x5982;&#x4E0B;1gcc -fprofile-arcs -ftest-coverage -o test test.c &#x7F16;&#x8BD1;&#x751F;&#x6210;&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x53EF;&#x6267;&#x884C;&#x76EE;&#x6807;&#x6587;&#x4EF6;test&#x548C;test.gcno&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;test&#x6587;&#x4EF6;&#x660E;&#x663E;&#x5927;&#x4E86;&#x8BB8;&#x591A;&#xFF0C;&#x5728;&#x6B64;&#x4E0D;&#x8BBA;&#x8FF0;&#x7F16;&#x8BD1;&#x5668;&#x5177;&#x4F53;&#x505A;&#x4E86;&#x4EC0;&#x4E48;&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x7684;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x53E6;&#x4E00;&#x7BC7;&#x535A;&#x6587;gcov&#x7684;&#x539F;&#x7406;&#xFF0C;test.gcno&#x6587;&#x4EF6;&#x5728;&#x751F;&#x6210;&#x62A5;&#x544A;123456root:~# gcc -o test test.croot:~# ls -l test-rwxr-xr-x 1 root root 7335 Dec 19 23:12 testroot:~# gcc -fprofile-arcs -ftest-coverage -o test test.croot:~# ls -l test-rwxr-xr-x 1 root root 22016 Dec 19 23:12 test &#x6D4B;&#x8BD5;&#x5185;&#x6838;&#x7A7A;&#x95F4;&#x4EE3;&#x7801; &#x6253;&#x5F00;kernel gcov&#x9009;&#x9879; 123# &#x5728;.config&#x4E2D;&#x6DFB;&#x52A0;CONFIG_DEBUG_FS=yCONFIG_DEBUG_KERNEL=y &#x8BBE;&#x7F6E;&#x6D4B;&#x8BD5;&#x76EE;&#x6807;&#x4EE3;&#x7801; 1234567#&#x82E5;&#x6D4B;&#x8BD5;&#x6574;&#x4E2A;&#x5185;&#x6838;&#xFF0C;&#x5728;.config&#x4E2D;&#x6DFB;&#x52A0;CONFIG_GCOV_PROFILE_ALL=y#&#x82E5;&#x6D4B;&#x8BD5;&#x67D0;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;&#x6240;&#x6709;&#x6587;&#x4EF6;&#xFF0C;&#x5728;&#x76EE;&#x5F55;Makefile&#x4E2D;&#x6DFB;&#x52A0;GCOV_PROFILE=y#&#x82E5;&#x6D4B;&#x8BD5;&#x76EE;&#x5F55;&#x4E0B;&#x67D0;&#x51E0;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x5728;&#x76EE;&#x5F55;Makefile&#x4E2D;&#x6DFB;&#x52A0;GCOV_PROFILE_file1_name.o=yGCOV_PROFILE_file2_name.o=y &#x751F;&#x6210;&#x7684;gcno&#x6587;&#x4EF6;&#x4F4D;&#x7F6E;&#x4E3A;out/target/***/obj/kernel/*** &#x8FD0;&#x884C;&#x6D4B;&#x8BD5;&#x6D4B;&#x8BD5;&#x8FC7;&#x7A0B;&#x4F1A;&#x751F;&#x6210; gcda&#x6587;&#x4EF6;&#xFF0C;&#x5BF9;&#x4E8E;&#x5185;&#x6838;&#x4EE3;&#x7801;&#xFF0C;gcda&#x6587;&#x4EF6;&#x7684;&#x4F4D;&#x7F6E;&#x4E3A;/sys/kernel/debug/gcov/$KERNEL_PATH/ &#x4F7F;&#x7528;lcov&#x751F;&#x6210;&#x4E2D;&#x95F4;&#x6587;&#x4EF6;coverage infomation12#&#x5C06;gcda&#x548C;gcno&#x6587;&#x4EF6;&#x653E;&#x5728;&#x540C;&#x4E00;&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x5728;&#x8BE5;&#x76EE;&#x5F55;&#x4E0B;&#x6267;&#x884C;lcov -b &lt;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x8DEF;&#x5F84;&gt; -d . -c -o result.info --rc lcov_branch_coverage=1 --rc lcov_branch_coverage=1&#x8868;&#x793A;&#x5305;&#x542B;&#x5206;&#x652F;&#x6570;&#x636E;&#xFF0C;lcov&#x652F;&#x6301;&#x5F88;&#x591A;&#x9009;&#x9879;&#xFF0C;&#x5177;&#x4F53;&#x53EF;&#x53C2;&#x8003;&#x5176;Manpage&#x751F;&#x6210;&#x7684;info&#x6587;&#x4EF6;&#x683C;&#x5F0F;&#x5982;&#x4E0B;&#xFF0C;&#x5305;&#x542B;&#x4E86;&#x4EE3;&#x7801;&#x8DEF;&#x5F84;&#x53CA;&#x6BCF;&#x4E00;&#x884C;&#x7684;&#x8C03;&#x7528;&#x6B21;&#x6570;123456SF:[&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x8DEF;&#x5F84;]FN:[&#x884C;&#x53F7;],[&#x51FD;&#x6570;&#x540D;]DA:[&#x884C;&#x53F7;],[&#x6267;&#x884C;&#x6B21;&#x6570;]LF:&#x88AB;&#x7EDF;&#x8BA1;&#x7684;&#x603B;&#x884C;&#x6570;LH:&#x88AB;&#x6267;&#x884C;&#x7684;&#x884C;&#x6570;end_of_record &#x4F7F;&#x7528;genhtml&#x751F;&#x6210;html&#x62A5;&#x544A;12# &#x4F1A;&#x751F;&#x6210;result&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x53EF;&#x901A;&#x8FC7;index.html&#x8FDB;&#x884C;&#x67E5;&#x770B;genhtml -o result result.info --rc lcov_branch_coverage=1 &#x4F7F;&#x7528;&#x6280;&#x5DE7;Tips1.&#x5C06;&#x591A;&#x4E2A;&#x6D4B;&#x8BD5;&#x9636;&#x6BB5;&#x7684;&#x62A5;&#x544A;&#x8FDB;&#x884C;&#x6574;&#x5408;&#xFF0C;&#x8FD9;&#x4E2A;&#x529F;&#x80FD;&#x5728;&#x6D4B;&#x8BD5;&#x5185;&#x6838;&#x9A71;&#x52A8;&#x65F6;&#x7279;&#x522B;&#x6709;&#x7528;&#xFF0C;&#x56E0;&#x4E3A;&#x6709;&#x65F6;&#x9700;&#x8981;&#x91CD;&#x542F;&#x8FDB;&#x884C;&#x7B2C;&#x4E8C;&#x9636;&#x6BB5;&#x6D4B;&#x8BD5;&#xFF0C;&#x4F46;&#x91CD;&#x542F;&#x540E;&#x8986;&#x76D6;&#x7387;&#x4FE1;&#x606F;&#x5C06;&#x4F1A;&#x88AB;&#x91CD;&#x7F6E;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x5C06;coverage info&#x5148;&#x4FDD;&#x5B58;&#x4E0B;&#x6765;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x591A;&#x4E2A;info&#x6574;&#x5408;&#x751F;&#x6210;&#x6700;&#x7EC8;&#x7684;&#x62A5;&#x544A;&#xFF0C;&#x5982;&#xFF1A;1234567#&#x6D4B;&#x8BD5;&#x9636;&#x6BB5;1&#x5B8C;&#x6210;&#xFF0C;pull&#x51FA;gcda&#x6587;&#x4EF6;&#xFF0C;&#x751F;&#x6210;phase1.info#&#x91CD;&#x542F;#&#x6D4B;&#x8BD5;&#x9636;&#x6BB5;2&#x5B8C;&#x6210;&#xFF0C;pull&#x51FA;gcda&#x6587;&#x4EF6;&#xFF0C;&#x751F;&#x6210;phase2.info#&#x6574;&#x5408;phase1.info&#x548C;phase2.infolcov -a phase1.info -a phase2.info -o out.info#&#x751F;&#x6210;html&#x62A5;&#x544A;&#xFF0C;&#x4E3A;&#x4E24;&#x6B21;&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#x6C47;&#x603B;genhtml -o result out.info &#x5728;&#x6DFB;&#x52A0;&#x65B0;&#x7684;&#x6D4B;&#x8BD5;&#x540E;&#xFF0C;&#x4E4B;&#x524D;&#x7684;&#x6D4B;&#x8BD5;&#x4E0D;&#x7528;&#x91CD;&#x65B0;&#x8DD1;&#x8FC7;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5F97;&#x5230;&#x65B0;&#x7684;&#x6D4B;&#x8BD5;&#x62A5;&#x544A;&#xFF0C;&#x5C06;&#x62A5;&#x544A;&#x8FDB;&#x884C;&#x53E0;&#x52A0;&#x5373;&#x53EF;&#x3002;Tips2.&#x5728;&#x4F7F;&#x7528;lcov&#x751F;&#x6210;.info&#x6587;&#x4EF6;&#x65F6;&#xFF0C;&#x6709;&#x65F6;&#x4F1A;&#x62A5;match&#x9519;&#x8BEF;&#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E00;&#x822C;&#x6709;&#x4E24;&#x79CD;&#x539F;&#x56E0; gcda&#x4E0E;gcno&#x5BF9;&#x5E94;&#x7684;&#x4E0D;&#x662F;&#x540C;&#x4E00;&#x6B21;build&#x7684;&#x955C;&#x50CF;&#xFF0C;&#x53EF;&#x901A;&#x8FC7;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#x67E5;&#x770B;&#xFF0C;&#x4E24;&#x6B21;tag&#x76F8;&#x540C;&#x5219;&#x4E3A;&#x540C;&#x4E00;&#x6B21;&#x7F16;&#x8BD1;&#x7684;&#xFF0C;&#x5426;&#x5219;&#x53EA;&#x80FD;&#x91CD;&#x65B0;&#x7F16;&#x8BD1;&#x6D4B;&#x8BD5; 1234$ hexdump -e &apos;&quot;%x\n&quot;&apos; -s8 -n4 usb.gcno6f88d714$ hexdump -e &apos;&quot;%x\n&quot;&apos; -s8 -n4 usb.gcda6f88d714 &#x7F16;&#x8BD1;&#x4EE3;&#x7801;&#x7684;&#x4E3B;&#x673A;&#x4E0E;&#x751F;&#x6210;&#x62A5;&#x544A;&#x7684;&#x4E3B;&#x673A;&#x6E90;&#x7801;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x4E0D;&#x540C; Tips3.genhtml&#x9ED8;&#x8BA4;&#xFF1A;90%+&#x4E3A;&#x7EFF;&#x8272;&#xFF0C;75%~90%&#x4E3A;&#x9EC4;&#x8272;&#xFF0C;75%&#x4EE5;&#x4E0B;&#x4E3A;&#x7EA2;&#x8272;&#x90A3;&#x4E48;&#x80FD;&#x4E0D;&#x80FD;&#x6839;&#x636E;&#x9879;&#x76EE;&#x8981;&#x6C42;&#x81EA;&#x5B9A;&#x4E49;&#x9608;&#x503C;&#x5462;&#xFF0C;&#x7B54;&#x6848;&#x662F;&#x53EF;&#x4EE5;&#x7684;&#xFF0C;lcov/genhtml&#x652F;&#x6301;&#x901A;&#x8FC7; &#x2013;rc &#x4F20;&#x8F93;&#x4E00;&#x4E9B;&#x914D;&#x7F6E;&#x53C2;&#x6570;&#x3002;&#x5176;&#x4E2D;&#x4E0E;&#x9608;&#x503C;&#x76F8;&#x5173;&#x8BBE;&#x7F6E;&#x9879;&#xFF1A;123456genhtml_hi_limit -&gt; &#x5168;&#x5C40;genhtml_med_limit -&gt; &#x5168;&#x5C40;genhtml_branch_hi_limit -&gt; &#x5206;&#x652F;genhtml_branch_med_limit -&gt; &#x5206;&#x652F;genhtml_function_hi_limit -&gt; &#x51FD;&#x6570;genhtml_function_med_limit -&gt; &#x51FD;&#x6570; &#x5305;&#x542B;&#x4E86;&#x5168;&#x5C40;&#xFF0C;&#x5206;&#x652F;&#x53CA;&#x51FD;&#x6570;&#x7684;&#x9608;&#x503C;&#x8BBE;&#x7F6E;&#xFF0C;&#x4EE5;&#x5355;&#x72EC;&#x8BBE;&#x7F6E;&#x4E3A;&#x51C6;&#x3002;&#x5982;&#x679C;&#x4F60;&#x5B9A;&#x4E49;&#x4E86;genhtml_hi_limit&#x548C;genhtml_branch_hi_limit&#xFF0C;&#x5BF9;branch&#x6765;&#x8BF4;&#x8FD8;&#x662F;&#x4EE5;genhtml_branch_hi_limit&#x4E3A;&#x51C6;&#xFF0C;&#x800C;line&#x548C;function&#x5219;&#x4F7F;&#x7528;&#x5168;&#x5C40;&#x7684;&#x8BBE;&#x7F6E;&#x3002;&#x6240;&#x4EE5;&#x867D;&#x7136;&#x6CA1;&#x6709;line&#x7684;&#x5355;&#x72EC;&#x8BBE;&#x7F6E;&#x9879;&#xFF0C;&#x4E5F;&#x662F;&#x53EF;&#x4EE5;&#x5206;&#x522B;&#x8BBE;&#x7F6E;line&#xFF0C;function&#x548C;branch&#x7684;&#x9608;&#x503C;&#x3002; &#x6709;&#x5174;&#x8DA3;&#x7684;&#x67E5;&#x770B;lcov/genhtml&#x7684;&#x6E90;&#x7801;&#xFF0C;&#x5C31;&#x662F;&#x4E24;&#x4E2A;perl&#x811A;&#x672C;&#xFF0C;&#x4E00;&#x822C;&#x4F4D;&#x7F6E;&#x5728; /user/local/bin/lcov /user/local/bin/genhtml`]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[minicom]]></title>
      <url>%2F2016%2F12%2F16%2Fminicom%2F</url>
      <content type="text"><![CDATA[&#x914D;&#x7F6E;sudo minicom -s&#x6253;&#x5F00;&#x914D;&#x7F6E;&#x9009;&#x9879;&#xFF0C;&#x5982;&#x4E0B;&#xFF0C;&#x4E0A;&#x4E0B;&#x952E;&#x79FB;&#x52A8;&#xFF0C;&#x56DE;&#x8F66;&#x9009;&#x62E9;1234567891011+-----[configuration]------+| Filenames and paths || File transfer protocols || Serial port setup || Modem and dialing || Screen and keyboard || Save setup as dfl || Save setup as.. || Exit || Exit from Minicom |+--------------------------+ &#x9009;&#x62E9;Serial port setup&#xFF0C;&#x51FA;&#x73B0;&#x4E32;&#x53E3;&#x8BBE;&#x7F6E;&#x754C;&#x9762;&#xFF0C;&#x901A;&#x8FC7;&#x6309;&#x952E;A~G&#x9009;&#x62E9;&#x5BF9;&#x5E94;&#x9009;&#x9879;&#xFF0C;&#x4E00;&#x822C;&#x4FEE;&#x6539;&#x4E32;&#x53E3;&#x8282;&#x70B9;&#x5373;&#x53EF;&#xFF0C;&#x5982;&#x679C;&#x9700;&#x8981;&#x5728;&#x4E32;&#x53E3;&#x4E2D;&#x8F93;&#x5165;&#x547D;&#x4EE4;&#xFF0C;&#x9700;&#x8981;&#x6309;F&#x952E;&#x5C06;Hardware Flow Control&#x6539;&#x4E3A;No&#xFF0C;&#x4FEE;&#x6539;&#x5B8C;&#x6210;&#x540E;&#x56DE;&#x8F66;&#xFF0C;&#x9009;&#x62E9;Save setup as dfl&#x4FDD;&#x5B58;&#x4E3A;&#x9ED8;&#x8BA4;&#x8BBE;&#x7F6E;&#xFF0C;&#x7136;&#x540E;&#x9009;&#x62E9; Exit &#x5373;&#x53EF;&#x8FDB;&#x5165;&#x7EC8;&#x7AEF;&#x754C;&#x9762;&#x3002;1234567891011+-----------------------------------------------------------------------+| A - Serial Device : /dev/ttyUSB0 || B - Lockfile Location : /var/lock || C - Callin Program : || D - Callout Program : || E - Bps/Par/Bits : 115200 8N1 || F - Hardware Flow Control : No || G - Software Flow Control : No || || Change which setting? |+-----------------------------------------------------------------------+ &#x529F;&#x80FD;&#x8FDB;&#x5165;minicom&#x540E;&#xFF0C;&#x5148;&#x6309;Ctrl+A&#xFF0C;&#x7EC8;&#x7AEF;&#x4F1A;&#x6682;&#x505C;&#x8F93;&#x51FA;&#xFF0C;&#x518D;&#x6309;&#x4E0D;&#x540C;&#x7684;&#x952E;(&#x4E0D;&#x533A;&#x5206;&#x5927;&#x5C0F;&#x5199;)&#x9009;&#x62E9;&#x4E0D;&#x540C;&#x529F;&#x80FD;&#xFF0C;&#x5982;&#x4E0B;12345678910111213141516171819+-------------------------------------------------------------------+| Minicom Command Summary || || Commands can be called by CTRL-A &lt;key&gt; || || Main Functions Other Functions || || Dialing directory..D run script (Go)....G | Clear Screen.......C || Send files.........S Receive files......R | cOnfigure Minicom..O || comm Parameters....P Add linefeed.......A | Suspend minicom....J || Capture on/off.....L Hangup.............H | eXit and reset.....X || send break.........F initialize Modem...M | Quit with no reset.Q || Terminal settings..T run Kermit.........K | Cursor key mode....I || lineWrap on/off....W local Echo on/off..E | Help screen........Z || Paste file.........Y Timestamp toggle...N | scroll Back........B || Add Carriage Ret...U || || Select function or press Enter for none. |+-------------------------------------------------------------------+ &#x5E38;&#x7528; Ctrl+A X &#x9000;&#x51FA; Ctrl+A C &#x6E05;&#x5C4F; Ctrl+A L &#x4FDD;&#x5B58;log&#x5230;&#x6587;&#x4EF6; Ctrl+A O &#x8F6C;&#x5230;&#x914D;&#x7F6E;&#x754C;&#x9762; Ctrl+A J &#x6302;&#x8D77;minicom&#xFF0C;&#x9000;&#x5230;terminal Ctrl+A Z &#x8F93;&#x51FA;&#x6240;&#x6709;&#x547D;&#x4EE4;&#x7684;help&#x4FE1;&#x606F; Ctrl+A &#x6709;&#x65F6;log&#x6253;&#x5370;&#x8FC7;&#x5FEB;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;Ctrl+A&#x6682;&#x505C;&#x8F93;&#x51FA;&#xFF0C;&#x518D;&#x6309;Ctrl+A&#x7EE7;&#x7EED; &#x4FDD;&#x5B58;&#x6240;&#x6709;log&#x5230;&#x6587;&#x4EF6;&#x4E2D;&#x542F;&#x52A8;minicom&#x65F6;&#x6309;Ctrl+A&#x518D;&#x6309;L&#xFF0C;&#x4F1A;&#x63D0;&#x793A;&#x4FDD;&#x5B58;&#x7684;&#x6587;&#x4EF6;&#x540D;&#xFF0C;&#x5982;&#x4E0B;&#xFF0C;&#x76F4;&#x63A5;&#x56DE;&#x8F66;&#x5373;&#x53EF;1234+-----------------------------------------+|Capture to which file? ||&gt; minicom.cap |+-----------------------------------------+ &#x6B64;&#x65F6;minicom&#x5F00;&#x59CB;&#x6355;&#x83B7;&#x6240;&#x6709;&#x7684;&#x8F93;&#x51FA;log&#xFF0C;&#x518D;&#x6B21;&#x6309;Ctrl+A L&#xFF0C;&#x63D0;&#x793A;&#x662F;&#x5426;&#x8981;&#x7ED3;&#x675F;&#x6216;&#x6682;&#x505C;&#x6355;&#x83B7;1234+--------------------------------+| Capture file || Close Pause Exit |+--------------------------------+ &#x9009;&#x62E9;Close&#xFF0C;&#x9000;&#x51FA;minicom&#xFF0C;&#x53EF;&#x770B;&#x5230;&#x5F53;&#x524D;&#x76EE;&#x5F55;&#x4E0B;&#x7684;minicom.cap&#x6587;&#x4EF6;&#xFF0C;&#x6253;&#x5F00;&#x5206;&#x6790;&#x5373;&#x53EF;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Linux gadget configured through configfs]]></title>
      <url>%2F2016%2F10%2F19%2Fgadget_configfs%2F</url>
      <content type="text"><![CDATA[&#x6982;&#x8FF0;A USB Linux Gadget is a device which has a UDC (USB Device Controller) and canbe connected to a USB Host to extend it with additional functions like a serialport or a mass storage capability. A gadget is seen by its host as a set of configurations, each of which containsa number of interfaces which, from the gadget&#x2019;s perspective, are known asfunctions, each function representing e.g. a serial connection or a SCSI disk. Linux provides a number of functions for gadgets to use. Creating a gadget means deciding what configurations there will beand which functions each configuration will provide. #Configfs (please see Documentation/filesystems/configfs/*)lends itself nicelyfor the purpose of telling the kernel about the above mentioned decision.This document is about how to do it. It also describes how configfs integration into gadget is designed. &#x524D;&#x63D0;&#x4F60;&#x9700;&#x8981;&#x5728;config&#x4E2D;&#x5C06;CONFIGFS_FS&#x914D;&#x7F6E;&#x9879;&#x6253;&#x5F00;&#xFF0C;&#x8BBE;&#x4E3A;&#x2019;y&#x2019;&#x6216;&#x2019;m&#x2019;&#xFF0C;&#x9009;&#x62E9;USB_LIBCOMPOSITE&#x540E;&#x4F1A;&#x9ED8;&#x8BA4;&#x6253;&#x5F00;configfs. &#x4F7F;&#x7528;(The original post describing the first functionmade available through configfs can be seen here:http://www.spinics.net/lists/linux-usb/msg76388.html)12$ modprobe libcomposite$ mount none $CONFIGFS_HOME -t configfs CONFIGFS_HOME&#x662F;configfs&#x7684;&#x6302;&#x8F7D;&#x70B9; &#x521B;&#x5EFA;gadgets&#x5B9E;&#x4F8B;123$ mkdir $CONFIGFS_HOME/usb_gadget/&lt;gadget name&gt;# e.g.:$ mkdir $CONFIGFS_HOME/usb_gadget/g1 &#x5B9A;&#x4E49;&#x4EA7;&#x54C1;&#x7684;VID&#x548C;PID12$ echo &lt;VID&gt; &gt; idVendor$ echo &lt;PID&gt; &gt; idProduct &#x5B9A;&#x4E49;&#x5E8F;&#x5217;&#x53F7;/&#x751F;&#x4EA7;&#x5546;/&#x4EA7;&#x54C1;&#x4FE1;&#x606F;&#xFF0C;0x409&#x4EE3;&#x8868;&#x82F1;&#x6587;&#x4FE1;&#x606F;1234$ mkdir strings/0x409$ echo &lt;serial number&gt; &gt; strings/0x409/serialnumber$ echo &lt;manufacturer&gt; &gt; strings/0x409/manufacturer$ echo &lt;product&gt; &gt; strings/0x409/product &#x521B;&#x5EFA;USB&#x914D;&#x7F6E;name&#x540D;&#x79F0;&#x968F;&#x610F;&#xFF0C;num&#x4E3A;USB&#x914D;&#x7F6E;&#x7684;&#x5E8F;&#x53F7;123$ mkdir configs/&lt;name&gt;.&lt;number&gt;# e.g.:$ mkdir configs/c.1 &#x521B;&#x5EFA;&#x914D;&#x7F6E;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x5C5E;&#x6027;&#x6587;&#x4EF6;123$ mkdir configs/c.1/strings/0x409$ echo &lt;configuration&gt; &gt; configs/c.1/strings/0x409/configuration$ echo 120 &gt; configs/c.1/MaxPower &#x521B;&#x5EFA;function1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859$ mkdir functions/&lt;name&gt;.&lt;instance name&gt;where &lt;name&gt; corresponds to one of allowed function names and instance nameis an arbitrary string allowed in a filesystem, e.g.:$ mkdir functions/ncm.usb0 # usb_f_ncm.ko gets loaded with request_module()Each function provides its specific set of attributes, with either read-onlyor read-write access. Where applicable they need to be written to asappropriate.Please refer to Documentation/ABI/*/configfs-usb-gadget* for more information.## &#x7ED1;&#x5B9A;USB&#x529F;&#x80FD;&#x5230;&#x914D;&#x7F6E;At this moment a number of gadgets is created, each of which has a number ofconfigurations specified and a number of functions available. What remainsis specifying which function is available in which configuration (the samefunction can be used in multiple configurations). This is achieved withcreating symbolic links:$ ln -s functions/&lt;name&gt;.&lt;instance name&gt; configs/&lt;name&gt;.&lt;number&gt;e.g.:$ ln -s functions/ncm.usb0 configs/c.1## enable the gadget&#x505A;&#x5B8C;&#x4E0A;&#x9762;&#x7684;&#x6B65;&#x9AA4;&#xFF0C;```bash../strings./strings/0x409./strings/0x409/serialnumber./strings/0x409/product./strings/0x409/manufacturer./configs./configs/c.1./configs/c.1/ncm.usb0 -&gt; ../../../../usb_gadget/g1/functions/ncm.usb0./configs/c.1/strings./configs/c.1/strings/0x409./configs/c.1/strings/0x409/configuration./configs/c.1/bmAttributes./configs/c.1/MaxPower./functions./functions/ncm.usb0./functions/ncm.usb0/ifname./functions/ncm.usb0/qmult./functions/ncm.usb0/host_addr./functions/ncm.usb0/dev_addr./UDC./bcdUSB./bcdDevice./idProduct./idVendor./bMaxPacketSize0./bDeviceProtocol./bDeviceSubClass./bDeviceClass &#x5C06;gadget&#x7ED1;&#x5B9A;&#x5230;UDC&#x5373;&#x53EF;enable gadget&#xFF0C;&#x8FD9;&#x91CC;&#x7684;udc name&#x5C31;&#x662F;sys/class/udc/*&#x4E0B;&#x7684;&#x76EE;&#x5F55;&#x540D;1$ echo &lt;udc name&gt; &gt; UDC disable the gadget1$ echo &quot;&quot; &gt; UDC &#x5220;&#x9664;USB&#x529F;&#x80FD;&#x548C;&#x914D;&#x7F6E;123$ rm configs/&lt;config name&gt;.&lt;number&gt;/&lt;function&gt;# e.g.:$ rm configfs/c.1/ncm.usb0 &#x5220;&#x9664;&#x914D;&#x7F6E;&#x5B57;&#x7B26;&#x4E32;&#x4FE1;&#x606F;123$ rmdir configs/&lt;config name&gt;.&lt;number&gt;/strings/&lt;lang&gt;e.g.:$ rmdir configs/c.1/strings/0x409 &#x5220;&#x9664;&#x914D;&#x7F6E;123$ rmdir configs/&lt;config name&gt;.&lt;number&gt;# e.g.:rmdir configs/c.1 &#x5220;&#x9664;USB&#x529F;&#x80FD;123$ rmdir functions/&lt;name&gt;.&lt;instance name&gt;# e.g.:$ rmdir functions/ncm.usb0 &#x5220;&#x9664;gadget&#x5B57;&#x7B26;&#x4E32;&#x4FE1;&#x606F;123$ rmdir strings/&lt;lang&gt;# e.g.:$ rmdir strings/0x409 &#x5220;&#x9664;gadget1234$ cd ..$ rmdir &lt;gadget name&gt;# e.g.:$ rmdir g1 Implementation designBelow the idea of how configfs works is presented.In configfs there are items and groups, both represented as directories.The difference between an item and a group is that a group can containother groups. In the picture below only an item is shown.Both items and groups can have attributes, which are represented as files.The user can create and remove directories, but cannot remove files,which can be read-only or read-write, depending on what they represent. The filesystem part of configfs operates on config_items/groups andconfigfs_attributes which are generic and of the same type for allconfigured elements. However, they are embedded in usage-specificlarger structures. In the picture below there is a &#x201C;cs&#x201D; which containsa config_item and an &#x201C;sa&#x201D; which contains a configfs_attribute. The filesystem view would be like this: ././cs (directory) | +&#x2013;sa (file) | . . . Whenever a user reads/writes the &#x201C;sa&#x201D; file, a function is calledwhich accepts a struct config_item and a struct configfs_attribute.In the said function the &#x201C;cs&#x201D; and &#x201C;sa&#x201D; are retrieved using the wellknown container_of technique and an appropriate sa&#x2019;s function (show orstore) is called and passed the &#x201C;cs&#x201D; and a character buffer. The &#x201C;show&#x201D;is for displaying the file&#x2019;s contents (copy data from the cs to thebuffer), while the &#x201C;store&#x201D; is for modifying the file&#x2019;s contents (copy datafrom the buffer to the cs), but it is up to the implementer of thetwo functions to decide what they actually do. typedef struct configured_structure cs;typedef struct specific_attribute sa; sa +----------------------------------+ cs | (*show)(cs *, buffer); | +&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2013;+ | (store)(cs , buffer, length); || | | || +&#x2014;&#x2014;&#x2014;&#x2014;-+ | | +&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;+ || | struct |-|&#x2014;-|&#x2014;&#x2014;&gt;|struct | || | config_item | | | |configfs_attribute| || +&#x2014;&#x2014;&#x2014;&#x2014;-+ | | +&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;+ || | +&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;-+| data to be set | .| | .+&#x2014;&#x2014;&#x2014;&#x2014;&#x2014;&#x2013;+ . The file names are decided by the config item/group designer, whilethe directories in general can be named at will. A group can havea number of its default sub-groups created automatically. For more information on configfs please seeDocumentation/filesystems/configfs/*. The concepts described above translate to USB gadgets like this: A gadget has its config group, which has some attributes (idVendor,idProduct etc) and default sub-groups (configs, functions, strings).Writing to the attributes causes the information to be stored inappropriate locations. In the configs, functions and strings sub-groupsa user can create their sub-groups to represent configurations, functions,and groups of strings in a given language. The user creates configurations and functions, in the configurationscreates symbolic links to functions. This information is used when thegadget&#x2019;s UDC attribute is written to, which means binding the gadgetto the UDC. The code in drivers/usb/gadget/configfs.c iterates overall configurations, and in each configuration it iterates over allfunctions and binds them. This way the whole gadget is bound. The file drivers/usb/gadget/configfs.c contains code for gadget&#x2019;s config_group gadget&#x2019;s default groups (configs, functions, strings) associating functions with configurations (symlinks) Each USB function naturally has its own view of what it wantsconfigured, so configgroups for particular functions are definedin the functions implementation files drivers/usb/gadget/f*.c. Function&#x2019;s code is written in such a way that it uses usb_get_function_instance(), which, in turn, calls request_module.So, provided that modprobe works, modules for particular functionsare loaded automatically. Please note that the converse is not true:after a gadget is disabled and torn down, the modules remain loaded.]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[blog for test]]></title>
      <url>%2F2016%2F10%2F14%2FBlog-for-test%2F</url>
      <content type="text"><![CDATA[&#x6982;&#x8FF0;&#x7B2C;&#x4E00;&#x7BC7;&#x6587;&#x6863;&#xFF0C;&#x7528;&#x4E8E;&#x6D4B;&#x8BD5;hexo&#x5BF9;markdown&#x7684;&#x652F;&#x6301;&#x3002; &#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x5757;&#x6D4B;&#x8BD5;c123456int i;int j = 2;for (i = 0; i &lt; 100; i++) { j += i;}print(&quot;j = %d\n&quot;, j); &#x6D4B;&#x8BD5;python12for i in range(10) print i &#x6D4B;&#x8BD5;bash1sudo apt-get install sl &#x4E8C;&#x7EA7;&#x6807;&#x9898;&#x4E09;&#x7EA7;&#x6807;&#x9898; &#x8FD9;&#x91CC;&#x662F;&#x5F15;&#x7528; &#x8FD9;&#x91CC;&#x662F;&#x659C;&#x4F53; &#x8FD9;&#x91CC;&#x662F;&#x7C97;&#x4F53; &#x5206;&#x5272;&#x7EBF; &#x65E0;&#x5E8F;&#x5217;&#x8868; 1 2 3 &#x6709;&#x5E8F;&#x5217;&#x8868; 1 2 3 &#x8868;&#x683C; table Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1 &#x6D4B;&#x8BD5;&#x94FE;&#x63A5;&#x767E;&#x5EA6; &#x63D2;&#x5165;&#x56FE;&#x7247; &#x5176;&#x4F59;&#x5F85;&#x6D4B;&#x8BD5;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2016%2F10%2F13%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
